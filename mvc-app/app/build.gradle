/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    mavenCentral()
}
dependencies {
    // MySQL JDBC Driver
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'

    // JSON Jackson 라이브러리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // JSON 구글 라이브러리
    implementation 'com.google.code.gson:gson:2.10.1'



    // 임베디드 Tomcat 서버
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.85'

    // Spring IoC 컨테이너
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.32'

    // Spring webmvc 라이브러리
    implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.32'

    // JSTL 라이브러리
    // https://mvnrepository.com/artifact/javax.servlet/jstl
    implementation 'javax.servlet:jstl:1.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.guava:guava:32.1.1-jre'

    // Spring WebMVC 프레임워크 라이브러리
    implementation 'org.springframework:spring-webmvc:5.3.32'

    // log4j 2.x 라이브러리
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'bitcamp.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// 자바 소스를 컴파일 할 때 적용할 옵션(Gradle 로 컴파일 할 때)
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'
}

run {
    standardInput = System.in
}
